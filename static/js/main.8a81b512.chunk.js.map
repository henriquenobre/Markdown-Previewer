{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","input","setInput","className","autoFocus","id","value","onChange","e","target","children","remarkPlugins","remarkGfm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OA2BeA,MArBf,WAEE,MAA0BC,mBAAS,kkBAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAIA,OACE,sBAAKC,UAAU,MAAf,UACE,0BACEC,WAAS,EACTC,GAAG,SACHC,MAAOL,EACPM,SAAU,SAACC,GAAD,OAAON,EAASM,EAAEC,OAAOH,UAErC,qBAAKD,GAAG,UAAR,SACE,cAAC,IAAD,CAAeA,GAAG,UAAUK,SAAUT,EAAOU,cAAe,CAACC,aCTtDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8a81b512.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react'\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm'\n\n\nfunction App() {\n\n  const [input, setInput] = useState(\"# Welcome to my React Markdown Previewer! \\n ## This is a sub-heading... \\n Heres some code, `<div></div>`, between 2 backticks. \\n There's also [links](https://www.freecodecamp.org) \\n ``` \\n // this is multi-line code: \\n function anotherExample(firstLine, lastLine) { \\n   if (firstLine == '```' && lastLine == '```') { \\n     return multiLineCode; \\n   } \\n } \\n ``` \\n 1. And there are numbered lists too. \\n > Block Quotes! \\n You can also make text **bold**... whoa! \\n ![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\")\n  \n\n\n  return (\n    <div className=\"App\">\n      <textarea\n        autoFocus\n        id=\"editor\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <div id=\"preview\">\n        <ReactMarkdown id=\"preview\" children={input} remarkPlugins={[remarkGfm]} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}